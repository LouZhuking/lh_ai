// 递归
// 相似的问题
// 自顶向下的思考 问题的终点
// 退出条件
// 重复计算 
// 树状结构 
    //       f(10)
    //   f(9)      f(8)
    // f(8) f(7) f(7) f(6)
  

function fib(n) {
  if (n <= 1) return n;
  return fib(n - 1) + fib(n - 2);
}

console.log(fib(10));

// 为什么可以使用递归
// 1. 问题的解可以分解为子问题的解
// 2. 问题的分解过程是一个重复的过程
// 3. 问题的分解过程中没有重复的子问题
